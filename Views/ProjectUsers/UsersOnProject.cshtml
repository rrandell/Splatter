@model Splatter.Models.ProjectUsersViewModel

@{
    ViewBag.Title = "UsersOnProject";
}

<h2>View or Assign Users</h2>

@using (Html.BeginForm("UsersOnProject", "ProjectUsers", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(m => m.ProjectId)
        @Html.HiddenFor(m => m.ProjectName)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Users, "Users", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedUsers, Model.Users as MultiSelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Users, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Unassign User(s)" class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Projects")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
